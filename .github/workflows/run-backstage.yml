name: Run Backstage Project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - feat-actions

jobs:
  setup-backstage:
    name: Set Up Backstage
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: backstage
          POSTGRES_PASSWORD: backstage
          POSTGRES_DB: backstage
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U backstage" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      # Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v3

      # Configuração do Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'

      # Instalar dependências no Frontend
      - name: Install Frontend Dependencies
        working-directory: packages/app
        run: yarn install

      # Instalar dependências no Backend
      - name: Install Backend Dependencies
        working-directory: packages/backend
        run: yarn install

      # Testar o Frontend
      - name: Run Frontend Tests
        working-directory: packages/app
        run: yarn test

      # Testar o Backend
      - name: Run Backend Tests
        working-directory: packages/backend
        run: yarn test

      # Build do Frontend
      - name: Build Frontend
        working-directory: packages/app
        run: yarn build

      # Iniciar Backend
      - name: Start Backend
        working-directory: packages/backend
        run: yarn start &

      # Verificação de saúde
      - name: Check Backend Health
        run: curl --fail http://localhost:7000/health
